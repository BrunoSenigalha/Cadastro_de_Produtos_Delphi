unit uFormMain;

interface

uses
   Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Menus, uCadastroProdutos,
  uConexoes, Vcl.Imaging.jpeg; // Adicionado uConexoes para acesso ao DataModule

type
  TfrmMain = class(TForm)
    MenuProdutos: TMainMenu;
    Produtos1: TMenuItem;
    Sair1: TMenuItem;
    Grupo1: TMenuItem;
    Produtos21: TMenuItem;
    Image1: TImage;
    Panel1: TPanel;
    Panel2: TPanel;
    Panel3: TPanel;
    Panel4: TPanel;
    Consu1: TMenuItem;
    Produtos2: TMenuItem;
    procedure FormCreate(Sender: TObject);
    procedure Produtos2Click(Sender: TObject);
    procedure Grupo1Click(Sender: TObject);
    procedure Produtos21Click(Sender: TObject);
    procedure TesteClick(Sender: TObject);
    procedure Panel1MouseEnter(Sender: TObject);
    procedure Sair1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private

    { Private declarations }
  public

    { Public declarations }
  end;

var
  frmMain: TfrmMain;

implementation

uses
  uCadastroGrupos, uCadastroProdutosReformulado;
  function ConverterRGB(r, g, b: Byte) : TColor;
  begin
    Result:= RGB(r, g, b);
  end;

{$R *.dfm}

procedure TfrmMain.TesteClick(Sender: TObject);
  var
  i: Integer;
  linhaResultado: string;
begin
  with dmConexoes do
  begin
    qrGrupos.Close;
    qrGrupos.SQL.Clear;
    qrGrupos.SQL.Add('SELECT * FROM GRUPOS');
    qrGrupos.Open;

    // Verifica se existem registros retornados
    if not qrGrupos.IsEmpty then
    begin
      qrGrupos.First;

      // Itera sobre os registros e exibe o resultado em ShowMessage
      while not qrGrupos.Eof do
      begin
        linhaResultado := '';
        for i := 0 to qrGrupos.FieldCount - 1 do
        begin
          linhaResultado := linhaResultado + qrGrupos.Fields[i].FieldName + ': ' +
            qrGrupos.Fields[i].AsString + ' | ';
        end;
        ShowMessage(linhaResultado); // Mostra cada registro
        qrGrupos.Next;
      end;
    end
    else
    begin
      ShowMessage('Nenhum registro encontrado.');
    end;
  end;

end;

procedure TfrmMain.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if Application.MessageBox('Deseja realmente sair? ', 'AVISO', MB_YESNO+MB_ICONQUESTION) = IDNO then
     Action := caNone // Impede o fechamento do formulário
  else
    Action := caFree;
end;

procedure TfrmMain.FormCreate(Sender: TObject);
begin
   frmMain.Color:= ConverterRGB(189, 202, 226);
end;

procedure TfrmMain.Grupo1Click(Sender: TObject);
begin
  frmCadastroGrupos:= TfrmCadastroGrupos.Create(self);
  frmCadastroGrupos.ShowModal;
  frmCadastroGrupos.Free;
end;

procedure TfrmMain.Panel1MouseEnter(Sender: TObject);
begin
  case TPanel(Sender).Color of
    clBlack: TPanel(Sender).Color  := clMaroon;
    clMaroon: TPanel(Sender).Color := clGreen;
    clGreen: TPanel(Sender).Color  := clOlive;
    clOlive: TPanel(Sender).Color  := clBlack;
    else
      TPanel(Sender).Color := clWhite;
  end;
end;


procedure TfrmMain.Produtos21Click(Sender: TObject);
begin
  CadastroProdutosRef:= TCadastroProdutosRef.Create(self);
  CadastroProdutosRef.ShowModal;
  CadastroProdutosRef.Free;
end;

procedure TfrmMain.Produtos2Click(Sender: TObject);
begin
  //Application.CreateForm(TfrmCadastroProdutos, frmCadastroProdutos);
  frmCadastroProdutos:= TfrmCadastroProdutos.Create(self);
  frmCadastroProdutos.ShowModal;
  frmCadastroProdutos.Free;
end;

procedure TfrmMain.Sair1Click(Sender: TObject);
begin
  if Application.MessageBox('Deseja realmente sair? ', 'AVISO', MB_YESNO+MB_ICONQUESTION) = 6 then
  begin
    Close;
  end;
end;

end.
